Log Analysis & CTI â€” Run Guide
How to Run

Go to the project folder:

cd C:\Users\Student\Desktop\Python\log_cti_project


Delete any old reports (report.md and report.txt) inside the reports folder.
(This avoids confusion when viewing updated files.)

Run the analyzer with AI support:

python .\src\main.py .\data\access_log.txt --format md --ai
python .\src\main.py .\data\access_log.txt --format txt --ai

This parses the access_log.txt file.

It enriches suspicious IPs with CTI (AbuseIPDB, Talos, VirusTotal).

It generates a Markdown report in the reports/ folder.

--ai uses the AI model (DeepSeek) to create an Analyst Note. If AI is unavailable, the script falls back to heuristic notes.

Explanation of Flags

--format md â†’ saves output as Markdown (report.md).

--format txt â†’ saves output as plain text (report.txt).

--ai â†’ adds AI-powered analyst notes.


Code Structure
log_cti_project/
â”‚
â”œâ”€â”€ data/
â”‚   â””â”€â”€ access_log.txt       # input log file
â”‚
â”œâ”€â”€ reports/                 # output reports (report.md, report.txt)
â”‚
â”œâ”€â”€ src/
â”‚   â”œâ”€â”€ main.py              # entry point, handles arguments + workflow
â”‚   â”œâ”€â”€ parser.py            # parses log file into entries
â”‚   â”œâ”€â”€ stats.py             # computes stats, error rates, suspicious IPs
â”‚   â”œâ”€â”€ cti.py               # enriches IPs with AbuseIPDB, Talos, VirusTotal
â”‚   â”œâ”€â”€ report.py            # generates text/markdown reports
â”‚   â”œâ”€â”€ ai_note.py           # heuristic analyst note generator
â”‚   â””â”€â”€ ai_llm.py            # AI (LLM) analyst note generator
â”‚
â””â”€â”€ requirements.txt         # Python dependencies


ðŸ‘‰ After running, open reports/report.md in VS Code or any Markdown viewer to check the analysis.